#import pymongo
from pymongo import MongoClient

from fastapi import FastAPI, HTTPException
from datetime import datetime

from model_classes import *  # write em
from typing import List

# Connecting to mongo client

client = MongoClient(
    host="localhost", port=27017, username="mongoadmin", password="turbit!"
)

db = client["turbine_data"]

# Expose with FastAPI
app = FastAPI()


@app.on_event("shutdown")
def shutdown_event():
    client.close()

startdate = datetime.strptime('2016-01-01T00:00', '%Y-%m-%dT%H:%M')

enddate = datetime.strptime('2016-01-01T00:20', '%Y-%m-%dT%H:%M')

cursor = db['Collection'].find({'Dat/Zeit': {'$gte':startdate,'$lt':enddate}})
for doc in cursor:
    pprint.pprint(doc)

print(cursor.count())
breakpoint()

'''
# Endpoint
@app.get("/{turb_id}", response_model=List[Turbs])
async def get_data(turb_id: int, startt: datetime, endt: datetime):
    myquery = db.Collection.find_many(  # for multiple criteria on one key
        {"$and": [{"turb_id": turb_id}, {"$gte": startt}, {"$lte": endt}]}
    )
    if myquery is not None:
        return myquery
    raise HTTPException(
        status_code=404, detail=f"Turbine {id} or chosen time range not found"
    )
'''
